<svg host="65bd71144e" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2582px" height="3152px" viewBox="-0.5 -0.5 2582 3152" content="&lt;mxfile&gt;&lt;diagram id=&quot;CUQukbXfNtAd7oVWSFBQ&quot; name=&quot;kernel-task-accounting.drawio.svg&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;">
    <defs>
        <clipPath id="mx-clip-114-181-322-154-0">
            <rect x="114" y="181" width="322" height="154"/>
        </clipPath>
        <clipPath id="mx-clip-744-885-722-40-0">
            <rect x="744" y="885" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-744-925-722-40-0">
            <rect x="744" y="925" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-744-965-722-40-0">
            <rect x="744" y="965" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-744-1005-722-40-0">
            <rect x="744" y="1005" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-744-1045-722-40-0">
            <rect x="744" y="1045" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-144-791-402-84-0">
            <rect x="144" y="791" width="402" height="84"/>
        </clipPath>
        <clipPath id="mx-clip-4-946-542-84-0">
            <rect x="4" y="946" width="542" height="84"/>
        </clipPath>
        <clipPath id="mx-clip-14-1101-542-84-0">
            <rect x="14" y="1101" width="542" height="84"/>
        </clipPath>
        <clipPath id="mx-clip-874-2575-722-70-0">
            <rect x="874" y="2575" width="722" height="70"/>
        </clipPath>
        <clipPath id="mx-clip-874-2645-722-260-0">
            <rect x="874" y="2645" width="722" height="260"/>
        </clipPath>
        <clipPath id="mx-clip-874-2905-722-140-0">
            <rect x="874" y="2905" width="722" height="140"/>
        </clipPath>
    </defs>
    <g>
        <rect x="0" y="3050" width="350" height="100" rx="15" ry="15" fill="none" stroke="none" pointer-events="all"/>
        <path d="M 3.55 3053.98 C 3.55 3053.98 3.55 3053.98 3.55 3053.98 M 3.55 3053.98 C 3.55 3053.98 3.55 3053.98 3.55 3053.98 M 3.29 3060.38 C 4.86 3059.54 6.32 3057.68 9.85 3052.83 M 3.29 3060.38 C 6.2 3057.45 8.15 3054.58 9.85 3052.83 M 2.37 3067.53 C 7 3064.48 11.25 3057.21 16.81 3050.92 M 2.37 3067.53 C 6.49 3062.76 11.92 3057.43 16.81 3050.92 M 2.77 3073.17 C 8.48 3064.83 18.99 3054.62 21.79 3051.28 M 2.77 3073.17 C 8.1 3067.6 12.78 3060.74 21.79 3051.28 M 2.51 3079.57 C 12.64 3070.83 19.88 3059.4 26.78 3051.64 M 2.51 3079.57 C 7.59 3073.85 14.98 3067.24 26.78 3051.64 M 2.9 3085.21 C 15.64 3071.53 24.42 3059.03 32.42 3051.25 M 2.9 3085.21 C 10.44 3077.21 17.77 3066.38 32.42 3051.25 M 2.64 3091.61 C 14.04 3077.47 26.1 3067.17 37.41 3051.61 M 2.64 3091.61 C 10.17 3082.12 19.77 3072.29 37.41 3051.61 M 2.38 3098.01 C 13.49 3084.61 25.23 3071.81 43.05 3051.22 M 2.38 3098.01 C 14.2 3085.1 26.23 3071.68 43.05 3051.22 M 2.77 3103.65 C 18.17 3082.92 37.77 3064.81 48.04 3051.58 M 2.77 3103.65 C 16.48 3086.85 31.08 3071.08 48.04 3051.58 M 2.51 3110.05 C 23.31 3087.71 38.97 3067.09 53.68 3051.18 M 2.51 3110.05 C 15.62 3096.68 27.72 3081.3 53.68 3051.18 M 2.91 3115.69 C 22.11 3094.21 42.32 3069.75 58.67 3051.54 M 2.91 3115.69 C 23.84 3093.13 42.89 3070.8 58.67 3051.54 M 2.64 3122.09 C 18.92 3105.64 31.1 3088.26 64.31 3051.15 M 2.64 3122.09 C 15.53 3105.66 30.39 3089.4 64.31 3051.15 M 3.04 3127.73 C 24.69 3105.02 44.82 3080.8 69.3 3051.51 M 3.04 3127.73 C 17.5 3112.02 31.14 3095.52 69.3 3051.51 M 2.78 3134.13 C 29.14 3105.15 52.1 3076.23 74.94 3051.11 M 2.78 3134.13 C 25.14 3108.55 47.47 3081.63 74.94 3051.11 M 2.52 3140.53 C 27.87 3110.81 51.63 3084.55 79.93 3051.47 M 2.52 3140.53 C 18.86 3120.05 37.23 3100.83 79.93 3051.47 M 4.22 3144.66 C 25.99 3120.42 46.75 3096.62 84.92 3051.83 M 4.22 3144.66 C 28.83 3117.72 54.25 3089.51 84.92 3051.83 M 5.93 3148.8 C 38.7 3110.1 72.32 3072.06 90.56 3051.44 M 5.93 3148.8 C 32.63 3118.93 58.18 3088.84 90.56 3051.44 M 9.6 3150.66 C 35.38 3118.28 64.07 3089.01 95.55 3051.8 M 9.6 3150.66 C 30.95 3128.58 50.33 3105.2 95.55 3051.8 M 15.25 3150.27 C 45.99 3113.2 80.38 3079.12 101.19 3051.4 M 15.25 3150.27 C 37.54 3126.3 58.91 3101.94 101.19 3051.4 M 20.23 3150.63 C 53.23 3114.18 84.27 3074.14 106.18 3051.76 M 20.23 3150.63 C 45.5 3121.04 70.4 3093.99 106.18 3051.76 M 25.88 3150.24 C 52.92 3121.22 77.37 3091.26 111.82 3051.37 M 25.88 3150.24 C 43.34 3127.55 63.27 3107.25 111.82 3051.37 M 30.86 3150.6 C 58.5 3119.44 82.06 3089.07 116.81 3051.73 M 30.86 3150.6 C 52.65 3126.07 75.73 3100.35 116.81 3051.73 M 36.51 3150.2 C 54.13 3130.31 74.24 3107.81 122.45 3051.33 M 36.51 3150.2 C 58.68 3123.46 81.67 3097.33 122.45 3051.33 M 41.49 3150.56 C 63.41 3127.83 80.74 3106.33 127.44 3051.69 M 41.49 3150.56 C 60.77 3127.77 80.8 3104.85 127.44 3051.69 M 47.14 3150.17 C 76.68 3115.51 106.24 3080.06 133.08 3051.3 M 47.14 3150.17 C 79.67 3111.5 114.04 3073.72 133.08 3051.3 M 52.12 3150.53 C 74.82 3119.37 101.08 3089.89 138.07 3051.66 M 52.12 3150.53 C 84.98 3111.63 117.6 3074.35 138.07 3051.66 M 57.77 3150.13 C 86.69 3116.98 114.42 3086.05 143.06 3052.02 M 57.77 3150.13 C 80.9 3121.72 107.3 3092.22 143.06 3052.02 M 62.75 3150.49 C 91.37 3113.49 124.74 3077.9 148.7 3051.63 M 62.75 3150.49 C 96.2 3112.69 127.76 3075.58 148.7 3051.63 M 67.74 3150.85 C 102.48 3110.92 135.65 3071.8 153.69 3051.99 M 67.74 3150.85 C 89.06 3125.58 111.32 3099.64 153.69 3051.99 M 73.38 3150.46 C 96.4 3123.86 116.95 3099.96 159.33 3051.59 M 73.38 3150.46 C 98.59 3120.16 125.29 3088.75 159.33 3051.59 M 78.37 3150.82 C 111.48 3114.38 142.81 3079.26 164.32 3051.95 M 78.37 3150.82 C 96.5 3129.71 115.13 3106.79 164.32 3051.95 M 84.01 3150.42 C 111.81 3115.3 139.31 3084.49 169.96 3051.56 M 84.01 3150.42 C 117.6 3111.21 152.88 3073.01 169.96 3051.56 M 89 3150.78 C 111.7 3122.67 136.55 3092.13 174.95 3051.92 M 89 3150.78 C 115.89 3119.74 142.56 3090.63 174.95 3051.92 M 94.64 3150.39 C 122.62 3119.38 147.87 3087.15 180.59 3051.52 M 94.64 3150.39 C 121.93 3120.29 147.67 3090.99 180.59 3051.52 M 99.63 3150.75 C 129.53 3113.49 161.46 3079.05 185.58 3051.88 M 99.63 3150.75 C 127.22 3116.88 155.26 3083.38 185.58 3051.88 M 105.28 3150.35 C 127.23 3124.84 148.67 3096.29 191.22 3051.49 M 105.28 3150.35 C 139.25 3110.79 172.74 3071.94 191.22 3051.49 M 110.26 3150.71 C 134.25 3124.61 152.64 3100.27 196.21 3051.85 M 110.26 3150.71 C 132 3123.39 154.07 3098.39 196.21 3051.85 M 115.91 3150.32 C 132.63 3131.86 151.25 3108.82 201.85 3051.45 M 115.91 3150.32 C 141.2 3120.29 165.15 3093.27 201.85 3051.45 M 120.89 3150.68 C 148.78 3116.79 178.08 3082.03 206.84 3051.81 M 120.89 3150.68 C 152.1 3114.62 182.47 3080.24 206.84 3051.81 M 125.88 3151.04 C 151.46 3126.34 174.23 3098.64 211.82 3052.17 M 125.88 3151.04 C 153.76 3120.66 179.23 3090.32 211.82 3052.17 M 131.52 3150.65 C 155.65 3121.5 179.87 3096.59 217.47 3051.78 M 131.52 3150.65 C 152.34 3126.36 173.8 3103.06 217.47 3051.78 M 136.51 3151.01 C 171.73 3113.38 205.31 3075.8 222.45 3052.14 M 136.51 3151.01 C 154.09 3129.91 171.74 3110.79 222.45 3052.14 M 142.15 3150.61 C 165.79 3124.42 186.6 3097.18 228.1 3051.74 M 142.15 3150.61 C 164.07 3125.9 184.57 3103.14 228.1 3051.74 M 147.14 3150.97 C 167.31 3130.58 183.08 3109.66 233.08 3052.1 M 147.14 3150.97 C 171.08 3123.88 192.9 3097.63 233.08 3052.1 M 152.78 3150.58 C 183.4 3116.88 210.09 3082.69 238.73 3051.71 M 152.78 3150.58 C 170.88 3128.66 189.66 3108.24 238.73 3051.71 M 157.77 3150.94 C 189.36 3117.06 220.27 3081.38 243.71 3052.07 M 157.77 3150.94 C 175.57 3129.27 194.11 3108.85 243.71 3052.07 M 163.41 3150.54 C 190.34 3119.51 213.22 3091.17 249.36 3051.67 M 163.41 3150.54 C 192.52 3117.4 222.36 3081.59 249.36 3051.67 M 168.4 3150.9 C 200.05 3116.1 228.94 3082.19 254.34 3052.03 M 168.4 3150.9 C 190.11 3124.56 214.21 3097.71 254.34 3052.03 M 174.04 3150.51 C 207.23 3112.45 239.17 3076.84 259.99 3051.64 M 174.04 3150.51 C 204.92 3115.54 234.25 3078.5 259.99 3051.64 M 179.03 3150.87 C 205.83 3116.82 235.85 3086.98 264.97 3052 M 179.03 3150.87 C 205.64 3121.24 230.87 3090.84 264.97 3052 M 184.67 3150.47 C 218.91 3112.59 247.26 3076.6 269.96 3052.36 M 184.67 3150.47 C 208.05 3122.94 231.05 3097.04 269.96 3052.36 M 189.66 3150.83 C 216.14 3121.06 245.04 3086.42 275.6 3051.97 M 189.66 3150.83 C 214.54 3120.73 240.57 3089.85 275.6 3051.97 M 194.65 3151.19 C 220.23 3116.85 248.2 3086.7 280.59 3052.33 M 194.65 3151.19 C 217.68 3123.59 240.66 3096.65 280.59 3052.33 M 200.29 3150.8 C 231.05 3118.09 258.03 3083.76 286.23 3051.93 M 200.29 3150.8 C 225.88 3121.86 251.24 3092.59 286.23 3051.93 M 205.28 3151.16 C 221.27 3132.29 240.98 3109.29 291.22 3052.29 M 205.28 3151.16 C 225.08 3127.97 246.12 3103.96 291.22 3052.29 M 210.92 3150.76 C 235.71 3120.19 263.69 3092.31 296.86 3051.9 M 210.92 3150.76 C 229.04 3130.34 245.32 3110.57 296.86 3051.9 M 215.91 3151.12 C 238.79 3126.33 260.62 3102.23 301.85 3052.26 M 215.91 3151.12 C 232.03 3130.23 251.35 3110.5 301.85 3052.26 M 221.55 3150.73 C 253.05 3114.73 280.74 3081.85 307.49 3051.86 M 221.55 3150.73 C 239.28 3130.66 257.11 3109.18 307.49 3051.86 M 226.54 3151.09 C 248.42 3127.55 272.98 3098.44 312.48 3052.22 M 226.54 3151.09 C 251.82 3121.09 276.71 3092.49 312.48 3052.22 M 232.18 3150.69 C 257.83 3122.17 280.82 3094.02 318.12 3051.83 M 232.18 3150.69 C 250.85 3128.23 268.9 3107.26 318.12 3051.83 M 237.17 3151.06 C 257.43 3124.4 279.87 3099.15 323.11 3052.19 M 237.17 3151.06 C 255.88 3131.37 272.78 3111.65 323.11 3052.19 M 242.81 3150.66 C 271.65 3116.81 299.37 3082.23 328.1 3052.55 M 242.81 3150.66 C 269.83 3117.21 300.54 3083.76 328.1 3052.55 M 247.8 3151.02 C 263.86 3132.54 284.46 3110.9 333.74 3052.15 M 247.8 3151.02 C 274.26 3120.54 301.43 3090.92 333.74 3052.15 M 252.78 3151.38 C 272.97 3128.93 289.56 3105.4 338.73 3052.51 M 252.78 3151.38 C 272.24 3128.5 292.55 3107.64 338.73 3052.51 M 258.43 3150.99 C 289.18 3114.03 321.47 3079.35 343.71 3052.87 M 258.43 3150.99 C 287.73 3117.09 317.91 3081.7 343.71 3052.87 M 263.41 3151.35 C 282.62 3128.82 303.48 3102.38 347.39 3054.74 M 263.41 3151.35 C 291.73 3116.52 322.56 3083.52 347.39 3054.74 M 269.06 3150.95 C 291.32 3126.89 316.37 3100.35 349.1 3058.88 M 269.06 3150.95 C 297.98 3117.17 329.41 3082.63 349.1 3058.88 M 274.04 3151.31 C 292.69 3130.78 309.09 3109.85 350.8 3063.01 M 274.04 3151.31 C 299.84 3122.86 324.24 3094.22 350.8 3063.01 M 279.69 3150.92 C 307.02 3117.57 336.83 3087.88 351.2 3068.65 M 279.69 3150.92 C 305.44 3120.4 332.46 3091.24 351.2 3068.65 M 284.67 3151.28 C 309.15 3121.89 335.26 3093.39 350.94 3075.05 M 284.67 3151.28 C 309.69 3121.82 333.42 3094.56 350.94 3075.05 M 290.32 3150.88 C 308.21 3131.04 322.21 3111.94 350.67 3081.45 M 290.32 3150.88 C 303.3 3136.43 317.66 3120.84 350.67 3081.45 M 295.3 3151.24 C 309.23 3138.26 321.74 3123.16 351.07 3087.09 M 295.3 3151.24 C 308.53 3135.91 322.49 3120.23 351.07 3087.09 M 300.95 3150.85 C 320.3 3129.8 337.27 3111.03 350.81 3093.49 M 300.95 3150.85 C 319.99 3130.26 338.18 3107.52 350.81 3093.49 M 305.93 3151.21 C 315.52 3136.69 329.4 3124.42 350.55 3099.89 M 305.93 3151.21 C 320.49 3134.06 334.53 3118.01 350.55 3099.89 M 310.92 3151.57 C 325.24 3131.55 341.76 3115.04 350.94 3105.53 M 310.92 3151.57 C 325.45 3135.33 340.5 3116.53 350.94 3105.53 M 316.56 3151.17 C 325.78 3139.45 336.04 3129.05 350.68 3111.93 M 316.56 3151.17 C 328.33 3137.89 338.87 3125.5 350.68 3111.93 M 321.55 3151.53 C 326.27 3144.42 333.97 3137.53 350.42 3118.33 M 321.55 3151.53 C 331.72 3140.48 341.2 3129.17 350.42 3118.33 M 327.19 3151.14 C 335.56 3144.46 340.65 3135.25 350.81 3123.97 M 327.19 3151.14 C 336.74 3141.45 345.21 3129.04 350.81 3123.97 M 332.18 3151.5 C 339.11 3145.35 346.61 3135.49 350.55 3130.37 M 332.18 3151.5 C 336.98 3145.68 340.11 3141.63 350.55 3130.37 M 337.17 3151.86 C 339.18 3148.39 342.61 3146.58 350.29 3136.77 M 337.17 3151.86 C 342.2 3146.49 346.4 3140.65 350.29 3136.77" fill="none" stroke="#ffccff" stroke-width="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 348px; height: 1px; padding-top: 3100px; margin-left: 1px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-style: italic; white-space: normal; overflow-wrap: normal;">
                                <font style="">
                                    <br style="border-color: var(--border-color);"/>
                                    kernel-task-accounting.drawio.svg
                                    <br/>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="175" y="3105" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="18px" text-anchor="middle" font-style="italic">
                    ...
                </text>
            </switch>
        </g>
        <a xlink:href="https://github.com/torvalds/linux/blob/3d7cb6b04c3f3115719235cc6866b10326de34cd/include/linux/sched.h#L726">
            <path d="M 110 176 L 110 150 L 440 150 L 440 176" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10" pointer-events="all"/>
            <path d="M 110 176 L 110 330 L 440 330 L 440 176" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <path d="M 110 176 L 440 176" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" font-size="12px">
                <text x="111.5" y="167.5">
                    struct task_struct  -  sched.h
                </text>
            </g>
        </a>
        <rect x="110" y="176" width="330" height="154" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-114-181-322-154-0)" font-size="11px">
            <text x="115.5" y="192.5">
                #ifdef CONFIG_TASK_DELAY_ACCT
            </text>
            <text x="115.5" y="205.5">
                struct task_delay_info      *delays;
            </text>
            <text x="115.5" y="218.5">
                #endif
            </text>
        </g>
        <a xlink:href="https://github.com/torvalds/linux/blob/3d7cb6b04c3f3115719235cc6866b10326de34cd/include/linux/delayacct.h#L13">
            <path d="M 740 26 L 740 0 L 1470 0 L 1470 26" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
            <path d="M 740 26 L 740 1080 L 1470 1080 L 1470 26" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <path d="M 740 26 L 1470 26" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" font-size="12px">
                <text x="741.5" y="17.5">
                    struct task_delay_info -  include/linux/delayacct.h
                </text>
            </g>
        </a>
        <rect x="740" y="26" width="730" height="854" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 720px; height: 1px; padding-top: 33px; margin-left: 746px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 850px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: nowrap;">
                                <div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-size: 14px; line-height: 19px;">
                                    <div>
                                        <span style="color: #569cd6;">
                                            struct
                                        </span>
                                        task_delay_info {
                                    </div>
                                    <div>
                                        <span style="color: #4ec9b0;">
                                            raw_spinlock_t
                                        </span>
                                        lock;
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #6a9955;">
                                            /* For each stat XXX, add following, aligned appropriately
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            *
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * struct timespec XXX_start, XXX_end;
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * u64 XXX_delay;
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * u32 XXX_count;
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            *
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * Atomicity of updates to XXX_delay, XXX_count protected by
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * single lock above (split into XXX_lock if contention is an issue).
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #6a9955;">
                                            /*
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * XXX_count is incremented on every XXX operation, the delay
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * associated with the operation is added to XXX_delay.
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * XXX_delay contains the accumulated delay time in nanoseconds.
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            */
                                        </span>
                                    </div>
                                    <div>
                                        u64 blkio_start;
                                    </div>
                                    <div>
                                        u64 blkio_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for sync block io completion(
                                        </span>
                                        <span style="color: rgb(106, 153, 85);">
                                            in nanoseconds
                                        </span>
                                        <span style="color: rgb(106, 153, 85);">
                                            ) */
                                        </span>
                                    </div>
                                    <div>
                                        u64 swapin_start;
                                    </div>
                                    <div>
                                        u64 swapin_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for swapin */
                                        </span>
                                    </div>
                                    <div>
                                        u32 blkio_count;
                                        <span style="color: #6a9955;">
                                            /* total count of the number of sync block */
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            /* io operations performed */
                                        </span>
                                    </div>
                                    <div>
                                        u32 swapin_count;
                                        <span style="color: #6a9955;">
                                            /* total count of swapin */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 freepages_start;
                                    </div>
                                    <div>
                                        u64 freepages_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for memory reclaim */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 thrashing_start;
                                    </div>
                                    <div>
                                        u64 thrashing_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for thrashing page */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 compact_start;
                                    </div>
                                    <div>
                                        u64 compact_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for memory compact */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 wpcopy_start;
                                    </div>
                                    <div>
                                        u64 wpcopy_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for write-protect copy */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u32 freepages_count;
                                        <span style="color: #6a9955;">
                                            /* total count of memory reclaim */
                                        </span>
                                    </div>
                                    <div>
                                        u32 thrashing_count;
                                        <span style="color: #6a9955;">
                                            /* total count of thrash waits */
                                        </span>
                                    </div>
                                    <div>
                                        u32 compact_count;
                                        <span style="color: #6a9955;">
                                            /* total count of memory compact */
                                        </span>
                                    </div>
                                    <div>
                                        u32 wpcopy_count;
                                        <span style="color: #6a9955;">
                                            /* total count of write-protect copy */
                                        </span>
                                    </div>
                                    <div>
                                        };
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="746" y="44" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">
                    struct task_delay_info {...
                </text>
            </switch>
        </g>
        <rect x="740" y="880" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF3333" font-family="Helvetica" clip-path="url(#mx-clip-744-885-722-40-0)" font-size="11px">
            <text x="745.5" y="896.5">
                __delayacct_blkio_start(void) : current-&gt;delays-&gt;blkio_start = local_clock();
            </text>
        </g>
        <rect x="740" y="920" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF3333" font-family="Helvetica" clip-path="url(#mx-clip-744-925-722-40-0)" font-size="11px">
            <text x="745.5" y="936.5">
                __delayacct_blkio_end(struct task_struct *p)
            </text>
        </g>
        <rect x="740" y="960" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF3333" font-family="Helvetica" clip-path="url(#mx-clip-744-965-722-40-0)" font-size="11px">
            <text x="745.5" y="976.5">
                static void delayacct_end(raw_spinlock_t *lock, u64 *start, u64 *total, u32 *count)
            </text>
        </g>
        <rect x="740" y="1000" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-744-1005-722-40-0)" font-size="11px">
            <text x="745.5" y="1016.5">
                delayacct_add_tsk(struct taskstats *d, struct task_struct *tsk)
            </text>
        </g>
        <rect x="740" y="1040" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF33FF" font-family="Helvetica" clip-path="url(#mx-clip-744-1045-722-40-0)" font-size="11px">
            <text x="745.5" y="1056.5">
                __delayacct_blkio_ticks(struct task_struct *tsk)
            </text>
        </g>
        <path d="M 740 365.05 L 465.26 298.85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <path d="M 440.96 292.99 L 454.83 288.77 L 465.26 298.85 L 451.39 303.07 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 329px; margin-left: 590px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                <span style="text-align: left; background-color: rgb(251, 251, 251);">
                                    delays
                                </span>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="590" y="332" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    delays
                </text>
            </switch>
        </g>
        <a xlink:href="https://github.com/torvalds/linux/blob/3d7cb6b04c3f3115719235cc6866b10326de34cd/include/linux/jiffies.h#L79">
            <rect x="2070" y="750" width="130" height="50" fill="#d5e8d4" stroke="#82b366"/>
            <g transform="translate(-0.5 -0.5)">
                <switch>
                    <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                        <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 775px; margin-left: 2071px;">
                            <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                                <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                    <b>
                                        <u>
                                            jiffie - linux/jiffies.h
                                        </u>
                                    </b>
                                    <br/>
                                    <br/>
                                    global variable
                                </div>
                            </div>
                        </div>
                    </foreignObject>
                    <text x="2135" y="779" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                        jiffie - linux/jiffie...
                    </text>
                </switch>
            </g>
        </a>
        <a xlink:href="http://books.gigatux.nl/mirror/kerneldevelopment/0672327201/ch10lev1sec3.html">
            <path d="M 2190 560 L 2370 560 L 2390 580 L 2390 660 L 2190 660 L 2190 560 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
            <path d="M 2370 560 L 2370 580 L 2390 580" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
            <g transform="translate(-0.5 -0.5)">
                <switch>
                    <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                        <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 610px; margin-left: 2191px;">
                            <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                                <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; text-decoration: underline; white-space: normal; overflow-wrap: normal;">
                                    holds the number of ticks that have occurred since the system booted.
                                    <br/>
                                    <br/>
                                    incremented by one during each
                                    <br/>
                                    timer interrupt
                                </div>
                            </div>
                        </div>
                    </foreignObject>
                    <text x="2290" y="614" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" text-decoration="underline">
                        holds the number of ticks that ha...
                    </text>
                </switch>
            </g>
        </a>
        <path d="M 2158.48 750 L 2243.03 660" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="2420" y="690" width="160" height="70" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 158px; height: 1px; padding-top: 725px; margin-left: 2421px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                <b>
                                    sched HZ
                                </b>
                                <br/>
                                <br/>
                                HZ timer interrupts in a second
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2500" y="729" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    sched HZ...
                </text>
            </switch>
        </g>
        <ellipse cx="2376.26" cy="844.98" rx="14.922623434045686" ry="14.930325149303252" fill="rgb(255, 255, 255)" stroke="none"/>
        <path d="M 2376.26 833.03 L 2376.26 830.04 C 2383.38 830 2389.54 835 2390.97 841.98 C 2392.4 848.96 2388.7 855.98 2382.14 858.74 C 2375.57 861.5 2367.97 859.24 2363.99 853.33 C 2360 847.42 2360.74 839.52 2365.75 834.46" fill="none" stroke="#0080f0" stroke-width="2" stroke-miterlimit="10"/>
        <path d="M 2367.31 836.02 L 2376.56 844.68 C 2376.64 844.85 2376.6 845.05 2376.47 845.19 C 2376.34 845.32 2376.13 845.36 2375.96 845.27 Z" fill="none" stroke="#0080f0" stroke-width="2" stroke-linejoin="round" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 869px; margin-left: 2376px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); background-color: #ffffff; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2376" y="881" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                </text>
            </switch>
        </g>
        <path d="M 2360 841 L 2206.11 795.86" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <path d="M 2201.07 794.38 L 2208.77 792.99 L 2206.11 795.86 L 2206.8 799.71 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 818px; margin-left: 2280px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                <span style="font-size: 12px; background-color: rgb(251, 251, 251);">
                                    interrupts
                                </span>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2280" y="821" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    interrupts
                </text>
            </switch>
        </g>
        <path d="M 2392.35 830 L 2464.12 760" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="1730" y="730" width="130" height="50" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 755px; margin-left: 1731px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                <b>
                                    <span>
                                        local_clock() = sched_clock()
                                        <br/>
                                        - clock.h
                                        <br/>
                                    </span>
                                </b>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1795" y="759" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    local_clock() = sched...
                </text>
            </switch>
        </g>
        <path d="M 1200.17 880 L 1730 768.66" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="2100" y="900" width="410" height="170" fill="#f5f5f5" stroke="#666666"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 408px; height: 1px; padding-top: 907px; margin-left: 2102px;">
                        <div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                /*
                                <br/>
                                * Scheduler clock - returns current time in nanosec units.
                                <br/>
                                * This is default implementation.
                                <br/>
                                * Architectures and sub-architectures can override this.
                                <br/>
                                */
                                <br/>
                                notrace unsigned long long __weak sched_clock(void)
                                <br/>
                                {
                                <br/>
                                return (unsigned long long)(jiffies - INITIAL_JIFFIES)
                                <br/>
                                * (NSEC_PER_SEC / HZ);
                                <br/>
                                }
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2102" y="919" fill="#333333" font-family="Helvetica" font-size="12px">
                    /*...
                </text>
            </switch>
        </g>
        <path d="M 1850.43 780 L 2116.52 900" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="1590" y="1130" width="480" height="240" fill="#f5f5f5" stroke="none"/>
        <g fill="#333333" font-family="Helvetica" font-size="12px">
            <text x="1591.5" y="1147.5">
                /*
            </text>
            <text x="1591.5" y="1161.5">
                * Finish delay accounting for a statistic using its timestamps (@start),
            </text>
            <text x="1591.5" y="1175.5">
                * accumalator (@total) and @count
            </text>
            <text x="1591.5" y="1189.5">
                */
            </text>
            <text x="1591.5" y="1203.5">
                static void delayacct_end(raw_spinlock_t *lock, u64 *start, u64 *total, u32 *count)
            </text>
            <text x="1591.5" y="1217.5">
                {
            </text>
            <text x="1591.5" y="1231.5">
                s64 ns = local_clock() - *start;
            </text>
            <text x="1591.5" y="1245.5">
                unsigned long flags;
            </text>
            <text x="1591.5" y="1273.5">
                if (ns &gt; 0) {
            </text>
            <text x="1591.5" y="1287.5">
                raw_spin_lock_irqsave(lock, flags);
            </text>
            <text x="1591.5" y="1301.5">
                *total += ns;
            </text>
            <text x="1591.5" y="1315.5">
                (*count)++;
            </text>
            <text x="1591.5" y="1329.5">
                raw_spin_unlock_irqrestore(lock, flags);
            </text>
            <text x="1591.5" y="1343.5">
                }
            </text>
            <text x="1591.5" y="1357.5">
                }
            </text>
        </g>
        <path d="M 1470 980 L 1670 1130" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="1590" y="870" width="430" height="180" fill="#f5f5f5" stroke="none"/>
        <g fill="#333333" font-family="Helvetica" font-size="12px">
            <text x="1591.5" y="887.5">
                /*
            </text>
            <text x="1591.5" y="901.5">
                * We cannot rely on the `current` macro, as we haven't yet switched back to
            </text>
            <text x="1591.5" y="915.5">
                * the process being woken.
            </text>
            <text x="1591.5" y="929.5">
                */
            </text>
            <text x="1591.5" y="943.5">
                void __delayacct_blkio_end(struct task_struct *p)
            </text>
            <text x="1591.5" y="957.5">
                {
            </text>
            <text x="1591.5" y="971.5">
                delayacct_end(&amp;p-&gt;delays-&gt;lock,
            </text>
            <text x="1591.5" y="985.5">
                &amp;p-&gt;delays-&gt;blkio_start,
            </text>
            <text x="1591.5" y="999.5">
                &amp;p-&gt;delays-&gt;blkio_delay,
            </text>
            <text x="1591.5" y="1013.5">
                &amp;p-&gt;delays-&gt;blkio_count);
            </text>
            <text x="1591.5" y="1027.5">
                }
            </text>
        </g>
        <path d="M 1470 940 L 1590 947.16" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <path d="M 140 786 L 140 760 L 550 760 L 550 786" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 140 786 L 140 870 L 550 870 L 550 786" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 140 786 L 550 786" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="141.5" y="777.5">
                static __schedule(unsigned int sched_mode)  -  kernel/sched/core.c
            </text>
        </g>
        <rect x="140" y="786" width="410" height="84" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-144-791-402-84-0)" font-size="11px">
            <text x="145.5" y="802.5">
                if (prev-&gt;in_iowait) {
            </text>
            <text x="145.5" y="815.5">
                atomic_inc(&amp;rq-&gt;nr_iowait);
            </text>
            <text x="145.5" y="828.5">
                delayacct_blkio_start();
            </text>
            <text x="145.5" y="841.5">
                }
            </text>
        </g>
        <path d="M 550 865.37 L 733.74 898.86" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 738.9 899.8 L 731.39 901.99 L 733.74 898.86 L 732.64 895.1 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 0 941 L 0 915 L 550 915 L 550 941" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 0 941 L 0 1025 L 550 1025 L 550 941" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 0 941 L 550 941" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="1.5" y="932.5">
                try_to_wake_up(struct task_struct *p, unsigned int state, int wake_flags)  -  kernel/sched/core.c
            </text>
        </g>
        <rect x="0" y="941" width="550" height="84" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-4-946-542-84-0)" font-size="11px">
            <text x="5.5" y="957.5">
                if (prev-&gt;in_iowait) {
            </text>
            <text x="5.5" y="970.5">
                atomic_inc(&amp;rq-&gt;nr_iowait);
            </text>
            <text x="5.5" y="983.5">
                delayacct_blkio_start();
            </text>
            <text x="5.5" y="996.5">
                }
            </text>
        </g>
        <path d="M 550 957.57 L 733.66 940.59" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 738.89 940.1 L 732.24 944.23 L 733.66 940.59 L 731.59 937.26 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 10 1096 L 10 1070 L 560 1070 L 560 1096" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 10 1096 L 10 1180 L 560 1180 L 560 1096" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 10 1096 L 560 1096" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="11.5" y="1080.5">
                ttwu_do_activate(struct rq *rq, struct task_struct *p, int wake_flags,
            </text>
            <text x="11.5" y="1094.5">
                struct rq_flags *rf)
            </text>
        </g>
        <rect x="10" y="1096" width="550" height="84" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-14-1101-542-84-0)" font-size="11px">
            <text x="15.5" y="1112.5">
                if (prev-&gt;in_iowait) {
            </text>
            <text x="15.5" y="1125.5">
                atomic_inc(&amp;rq-&gt;nr_iowait);
            </text>
            <text x="15.5" y="1138.5">
                delayacct_blkio_start();
            </text>
            <text x="15.5" y="1151.5">
                }
            </text>
        </g>
        <path d="M 420.27 1070 L 734.1 942.4" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 738.96 940.42 L 733.8 946.3 L 734.1 942.4 L 731.16 939.82 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 870 1816 L 870 1790 L 1600 1790 L 1600 1816" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 870 1816 L 870 3040 L 1600 3040 L 1600 1816" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 870 1816 L 1600 1816" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="871.5" y="1807.5">
                struct taskstats -  /usr/include/linux/taskstats.h
            </text>
        </g>
        <rect x="870" y="1816" width="730" height="754" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 720px; height: 1px; padding-top: 1823px; margin-left: 876px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 750px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: nowrap;">
                                <div style="background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-size: 14px; line-height: 19px;">
                                    <div style="line-height: 19px;">
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #569cd6;">
                                                struct
                                            </span>
                                            <span style="color: #4ec9b0;">
                                                taskstats
                                            </span>
                                            {
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* The version number of this struct. This field is always set to
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * TAKSTATS_VERSION, which is defined in &lt;linux/taskstats.h&gt;.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Each time the struct is changed, the value should be incremented.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u16
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                version
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_exitcode
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Exit status */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="">
                                            <font color="#6a9955">
                                                ...
                                            </font>
                                        </div>
                                        <div style="">
                                            <font color="#6a9955">
                                                <br/>
                                            </font>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay accounting fields start
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                *
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * All values, until comment "Delay accounting fields end" are
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * available only if delay accounting is enabled, even though the last
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * few fields are not delays
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                *
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_count is the number of delay values recorded
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_delay_total is the corresponding cumulative delay in nanoseconds
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                *
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_delay_total wraps around to zero on overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_count incremented regardless of overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for cpu, while runnable
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * count, delay_total NOT updated atomically
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_count
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Following four fields atomically updated using task-&gt;delays-&gt;lock */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for synchronous block I/O to complete
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * does not account for delays in I/O submission
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                blkio_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                blkio_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for page fault I/O (swap in only) */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                swapin_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                swapin_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* cpu "wall-clock" running time
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * On some architectures, value will adjust for cpu time stolen
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * from the kernel in involuntary waits due to virtualization.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Value is cumulative, in nanoseconds, without a corresponding count
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * and wraps around to zero silently on overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_run_real_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* cpu "virtual" running time
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Uses time intervals seen by the kernel i.e. no adjustment
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * for kernel's involuntary waits due to virtualization.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Value is cumulative, in nanoseconds, without a corresponding count
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * and wraps around to zero silently on overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_run_virtual_total
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay accounting fields end */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* version 1 ends here */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Basic Accounting Fields start */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #569cd6;">
                                                char
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_comm
                                            </span>
                                            [
                                            <span style="color: #569cd6;">
                                                TS_COMM_LEN
                                            </span>
                                            ];
                                            <span style="color: #6a9955;">
                                                /* Command name */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u8
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_sched
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Scheduling discipline */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u8
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_pad
                                            </span>
                                            [
                                            <span style="color: #b5cea8;">
                                                3
                                            </span>
                                            ];
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_uid
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* User ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_gid
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Group ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_pid
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Process ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_ppid
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Parent process ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* __u32 range means times from 1970 to 2106 */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_btime
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Begin time [sec since 1970] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_etime
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Elapsed time [usec] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_utime
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* User CPU time [usec] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_stime
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* SYstem CPU time [usec] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_minflt
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Minor Page Fault Count */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_majflt
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Major Page Fault Count */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Basic Accounting Fields end */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Extended accounting fields start */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Accumulated RSS usage in duration of a task, in MBytes-usecs.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * The current rss usage is added to this counter every time
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * a tick is charged to a task's system time. So, at the end we
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * will have memory usage multiplied by system time. Thus an
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * average usage per system time unit can be calculated.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                coremem
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* accumulated RSS usage in MB-usec */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Accumulated virtual memory usage in duration of a task.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Same as acct_rss_mem1 above except that we keep track of VM usage.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                virtmem
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* accumulated VM  usage in MB-usec */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* High watermark of RSS and virtual memory usage in duration of
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * a task, in KBytes.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                hiwater_rss
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* High-watermark of RSS usage, in KB */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                hiwater_vm
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* High-water VM usage, in KB */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* The following four fields are I/O statistics of a task. */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                read_char
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes read */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                write_char
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes written */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                read_syscalls
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* read syscalls */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                write_syscalls
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* write syscalls */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Extended accounting fields end */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #c586c0;">
                                                #define
                                            </span>
                                            <span style="color: #569cd6;">
                                            </span>
                                            <span style="color: #569cd6;">
                                                TASKSTATS_HAS_IO_ACCOUNTING
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Per-task storage I/O accounting starts */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                read_bytes
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes of read I/O */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                write_bytes
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes of write I/O */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cancelled_write_bytes
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes of cancelled write I/O */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                nvcsw
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* voluntary_ctxt_switches */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                nivcsw
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* nonvoluntary_ctxt_switches */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* time accounting for SMT machines */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_utimescaled
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* utime scaled on frequency etc */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_stimescaled
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* stime scaled on frequency etc */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_scaled_run_real_total
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* scaled cpu_run_real_total */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for memory reclaim */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                freepages_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                freepages_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for thrashing page */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                thrashing_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                thrashing_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* v10: 64-bit btime to avoid overflow */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_btime64
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* 64-bit begin time */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            };
                                        </div>
                                        <br/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="876" y="1834" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">
                    struct taskstats {...
                </text>
            </switch>
        </g>
        <rect x="870" y="2570" width="730" height="70" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-874-2575-722-70-0)" font-size="12px">
            <text x="875.5" y="2587.5">
                taskstats_user_cmd(struct sk_buff *skb, struct genl_info *info)
            </text>
            <text x="875.5" y="2601.5">
                cmd_attr_pid(struct genl_info *info)
            </text>
            <text x="875.5" y="2615.5">
                fill_stats_for_pid(pid_t pid, struct taskstats *stats)
            </text>
            <text x="875.5" y="2629.5">
                fill_stats(struct user_namespace *user_ns, struct pid_namespace *pid_ns, struct task_struct *tsk, struct taskstats *stats)
            </text>
        </g>
        <rect x="870" y="2640" width="730" height="260" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-874-2645-722-260-0)" font-size="12px">
            <text x="875.5" y="2657.5">
                static const struct genl_ops taskstats_ops[] = {
            </text>
            <text x="875.5" y="2671.5">
                {
            </text>
            <text x="875.5" y="2685.5">
                .cmd        = TASKSTATS_CMD_GET,
            </text>
            <text x="875.5" y="2699.5">
                .validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
            </text>
            <text x="875.5" y="2713.5">
                .doit       = taskstats_user_cmd,
            </text>
            <text x="875.5" y="2727.5">
                .policy     = taskstats_cmd_get_policy,
            </text>
            <text x="875.5" y="2741.5">
                .maxattr    = ARRAY_SIZE(taskstats_cmd_get_policy) - 1,
            </text>
            <text x="875.5" y="2755.5">
                .flags      = GENL_ADMIN_PERM,
            </text>
            <text x="875.5" y="2769.5">
                },
            </text>
            <text x="875.5" y="2783.5">
                {
            </text>
            <text x="875.5" y="2797.5">
                .cmd        = CGROUPSTATS_CMD_GET,
            </text>
            <text x="875.5" y="2811.5">
                .validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
            </text>
            <text x="875.5" y="2825.5">
                .doit       = cgroupstats_user_cmd,
            </text>
            <text x="875.5" y="2839.5">
                .policy     = cgroupstats_cmd_get_policy,
            </text>
            <text x="875.5" y="2853.5">
                .maxattr    = ARRAY_SIZE(cgroupstats_cmd_get_policy) - 1,
            </text>
            <text x="875.5" y="2867.5">
                },
            </text>
            <text x="875.5" y="2881.5">
                };
            </text>
        </g>
        <rect x="870" y="2900" width="730" height="140" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-874-2905-722-140-0)" font-size="12px">
            <text x="875.5" y="2917.5">
                static struct genl_family family __ro_after_init = {
            </text>
            <text x="875.5" y="2931.5">
                .name       = TASKSTATS_GENL_NAME,
            </text>
            <text x="875.5" y="2945.5">
                .version    = TASKSTATS_GENL_VERSION,
            </text>
            <text x="875.5" y="2959.5">
                .module     = THIS_MODULE,
            </text>
            <text x="875.5" y="2973.5">
                .ops        = taskstats_ops,
            </text>
            <text x="875.5" y="2987.5">
                .n_ops      = ARRAY_SIZE(taskstats_ops),
            </text>
            <text x="875.5" y="3001.5">
                .netnsok    = true,
            </text>
            <text x="875.5" y="3015.5">
                };
            </text>
        </g>
        <path d="M 1106.86 1040 L 1176.17 1783.66" fill="none" stroke="#3333ff" stroke-miterlimit="10"/>
        <path d="M 1176.65 1788.89 L 1172.52 1782.24 L 1176.17 1783.66 L 1179.49 1781.59 Z" fill="#3333ff" stroke="#3333ff" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1415px; margin-left: 1142px;">
                        <div data-drawio-colors="color: #3333FF; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(51, 51, 255); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                update
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1142" y="1418" fill="#3333FF" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    update
                </text>
            </switch>
        </g>
        <path d="M 870 2605 L 820 2605 Q 810 2605 810 2595 L 810 1046.37" fill="none" stroke="#3333ff" stroke-miterlimit="10"/>
        <path d="M 810 1041.12 L 813.5 1048.12 L 810 1046.37 L 806.5 1048.12 Z" fill="#3333ff" stroke="#3333ff" stroke-miterlimit="10"/>
        <rect x="1480" y="1400" width="360" height="150" fill="#f5f5f5" stroke="none"/>
        <g fill="#333333" font-family="Helvetica" font-size="12px">
            <text x="1481.5" y="1417.5">
                __u64 __delayacct_blkio_ticks(struct task_struct *tsk)
            </text>
            <text x="1481.5" y="1431.5">
                {
            </text>
            <text x="1481.5" y="1445.5">
                __u64 ret;
            </text>
            <text x="1481.5" y="1459.5">
                unsigned long flags;
            </text>
            <text x="1481.5" y="1473.5">
                raw_spin_lock_irqsave(&amp;tsk-&gt;delays-&gt;lock, flags);
            </text>
            <text x="1481.5" y="1487.5">
                ret = nsec_to_clock_t(tsk-&gt;delays-&gt;blkio_delay);
            </text>
            <text x="1481.5" y="1501.5">
                raw_spin_unlock_irqrestore(&amp;tsk-&gt;delays-&gt;lock, flags);
            </text>
            <text x="1481.5" y="1515.5">
                return ret;
            </text>
            <text x="1481.5" y="1529.5">
                }
            </text>
        </g>
        <path d="M 1131.75 1080 L 1559.7 1400" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
    </g>
    <switch>
        <g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/>
        <a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank">
            <text text-anchor="middle" font-size="10px" x="50%" y="100%">
                Text is not SVG - cannot display
            </text>
        </a>
    </switch>
</svg>