<svg host="65bd71144e" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2993px" height="3151px" viewBox="-0.5 -0.5 2993 3151" content="&lt;mxfile&gt;&lt;diagram id=&quot;CUQukbXfNtAd7oVWSFBQ&quot; name=&quot;kernel-task-accounting.drawio.svg&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;">
    <defs>
        <clipPath id="mx-clip-526-181-322-154-0">
            <rect x="526" y="181" width="322" height="154"/>
        </clipPath>
        <clipPath id="mx-clip-1156-885-722-40-0">
            <rect x="1156" y="885" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-1156-925-722-40-0">
            <rect x="1156" y="925" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-1156-965-722-40-0">
            <rect x="1156" y="965" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-1156-1005-722-40-0">
            <rect x="1156" y="1005" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-1156-1045-722-40-0">
            <rect x="1156" y="1045" width="722" height="40"/>
        </clipPath>
        <clipPath id="mx-clip-556-791-402-84-0">
            <rect x="556" y="791" width="402" height="84"/>
        </clipPath>
        <clipPath id="mx-clip-416-946-542-84-0">
            <rect x="416" y="946" width="542" height="84"/>
        </clipPath>
        <clipPath id="mx-clip-426-1101-542-84-0">
            <rect x="426" y="1101" width="542" height="84"/>
        </clipPath>
        <clipPath id="mx-clip-1286-2575-722-70-0">
            <rect x="1286" y="2575" width="722" height="70"/>
        </clipPath>
        <clipPath id="mx-clip-1286-2645-722-260-0">
            <rect x="1286" y="2645" width="722" height="260"/>
        </clipPath>
        <clipPath id="mx-clip-1286-2905-722-140-0">
            <rect x="1286" y="2905" width="722" height="140"/>
        </clipPath>
        <clipPath id="mx-clip-246-1751-722-114-0">
            <rect x="246" y="1751" width="722" height="114"/>
        </clipPath>
    </defs>
    <g>
        <rect x="412" y="3050" width="350" height="100" rx="15" ry="15" fill="none" stroke="none" pointer-events="all"/>
        <path d="M 415.52 3054.02 C 415.52 3054.02 415.52 3054.02 415.52 3054.02 M 415.52 3054.02 C 415.52 3054.02 415.52 3054.02 415.52 3054.02 M 415.26 3060.42 C 416.98 3059.5 418.59 3057.45 422.47 3052.11 M 415.26 3060.42 C 418.46 3057.2 420.6 3054.05 422.47 3052.11 M 414.34 3067.57 C 418.96 3064.52 423.21 3057.25 428.77 3050.97 M 414.34 3067.57 C 418.45 3062.8 423.88 3057.47 428.77 3050.97 M 414.73 3073.21 C 420.45 3064.87 430.95 3054.66 433.76 3051.33 M 414.73 3073.21 C 420.06 3067.64 424.75 3060.78 433.76 3051.33 M 414.47 3079.61 C 424.61 3070.87 431.85 3059.45 438.74 3051.69 M 414.47 3079.61 C 419.55 3073.89 426.94 3067.28 438.74 3051.69 M 414.87 3085.25 C 427.61 3071.57 436.38 3059.07 444.39 3051.29 M 414.87 3085.25 C 422.4 3077.25 429.74 3066.42 444.39 3051.29 M 414.6 3091.65 C 426.01 3077.51 438.06 3067.21 449.38 3051.65 M 414.6 3091.65 C 422.14 3082.16 431.73 3072.33 449.38 3051.65 M 415 3097.29 C 425.91 3084.12 437.46 3071.55 455.02 3051.26 M 415 3097.29 C 426.63 3084.6 438.48 3071.39 455.02 3051.26 M 414.74 3103.69 C 430.13 3082.96 449.73 3064.85 460.01 3051.62 M 414.74 3103.69 C 428.45 3086.89 443.04 3071.12 460.01 3051.62 M 414.48 3110.09 C 435.28 3087.75 450.94 3067.13 465.65 3051.22 M 414.48 3110.09 C 427.58 3096.72 439.69 3081.34 465.65 3051.22 M 414.87 3115.73 C 434.08 3094.25 454.29 3069.79 470.64 3051.58 M 414.87 3115.73 C 435.8 3093.17 454.85 3070.84 470.64 3051.58 M 414.61 3122.13 C 430.88 3105.68 443.06 3088.3 476.28 3051.19 M 414.61 3122.13 C 427.49 3105.7 442.35 3089.44 476.28 3051.19 M 415 3127.77 C 436.66 3105.06 456.78 3080.84 481.27 3051.55 M 415 3127.77 C 429.47 3112.06 443.1 3095.56 481.27 3051.55 M 414.74 3134.17 C 441.1 3105.19 464.07 3076.27 486.91 3051.15 M 414.74 3134.17 C 437.11 3108.59 459.44 3081.67 486.91 3051.15 M 414.48 3140.57 C 439.84 3110.85 463.6 3084.59 491.9 3051.51 M 414.48 3140.57 C 430.82 3120.09 449.2 3100.87 491.9 3051.51 M 416.19 3144.7 C 438.13 3120.26 459.06 3096.27 497.54 3051.12 M 416.19 3144.7 C 441 3117.53 466.61 3089.1 497.54 3051.12 M 418.55 3148.08 C 451.07 3109.67 484.43 3071.93 502.53 3051.48 M 418.55 3148.08 C 445.05 3118.45 470.4 3088.6 502.53 3051.48 M 421.57 3150.71 C 447.34 3118.32 476.03 3089.05 507.51 3051.84 M 421.57 3150.71 C 442.91 3128.62 462.29 3105.24 507.51 3051.84 M 427.21 3150.31 C 457.95 3113.24 492.35 3079.17 513.16 3051.44 M 427.21 3150.31 C 449.51 3126.34 470.87 3101.98 513.16 3051.44 M 432.2 3150.67 C 465.2 3114.22 496.23 3074.18 518.14 3051.8 M 432.2 3150.67 C 457.46 3121.08 482.37 3094.03 518.14 3051.8 M 437.84 3150.28 C 464.88 3121.26 489.33 3091.3 523.79 3051.41 M 437.84 3150.28 C 455.31 3127.59 475.24 3107.29 523.79 3051.41 M 442.83 3150.64 C 470.47 3119.48 494.03 3089.11 528.77 3051.77 M 442.83 3150.64 C 464.61 3126.11 487.7 3100.39 528.77 3051.77 M 448.47 3150.24 C 466.09 3130.35 486.21 3107.85 534.42 3051.37 M 448.47 3150.24 C 470.65 3123.5 493.64 3097.37 534.42 3051.37 M 453.46 3150.6 C 475.38 3127.87 492.7 3106.37 539.4 3051.73 M 453.46 3150.6 C 472.74 3127.81 492.77 3104.89 539.4 3051.73 M 459.1 3150.21 C 488.64 3115.55 518.2 3080.11 545.05 3051.34 M 459.1 3150.21 C 491.63 3111.54 526 3073.76 545.05 3051.34 M 464.09 3150.57 C 486.79 3119.41 513.05 3089.93 550.03 3051.7 M 464.09 3150.57 C 496.94 3111.67 529.56 3074.39 550.03 3051.7 M 469.73 3150.17 C 498.86 3116.78 526.81 3085.61 555.68 3051.31 M 469.73 3150.17 C 493.05 3121.53 519.65 3091.81 555.68 3051.31 M 474.72 3150.53 C 503.34 3113.53 536.71 3077.95 560.66 3051.67 M 474.72 3150.53 C 508.16 3112.73 539.72 3075.62 560.66 3051.67 M 480.36 3150.14 C 514.85 3110.5 547.76 3071.68 565.65 3052.03 M 480.36 3150.14 C 501.51 3125.06 523.61 3099.31 565.65 3052.03 M 485.35 3150.5 C 508.36 3123.9 528.91 3100 571.29 3051.63 M 485.35 3150.5 C 510.55 3120.2 537.25 3088.79 571.29 3051.63 M 490.34 3150.86 C 523.44 3114.42 554.77 3079.3 576.28 3051.99 M 490.34 3150.86 C 508.46 3129.75 527.1 3106.83 576.28 3051.99 M 495.98 3150.46 C 523.78 3115.34 551.28 3084.53 581.92 3051.6 M 495.98 3150.46 C 529.56 3111.26 564.84 3073.05 581.92 3051.6 M 500.97 3150.82 C 523.67 3122.71 548.51 3092.17 586.91 3051.96 M 500.97 3150.82 C 527.86 3119.79 554.53 3090.67 586.91 3051.96 M 506.61 3150.43 C 534.59 3119.42 559.83 3087.19 592.55 3051.56 M 506.61 3150.43 C 533.89 3120.33 559.64 3091.03 592.55 3051.56 M 511.6 3150.79 C 541.49 3113.53 573.43 3079.09 597.54 3051.92 M 511.6 3150.79 C 539.18 3116.92 567.22 3083.42 597.54 3051.92 M 517.24 3150.39 C 539.19 3124.88 560.63 3096.33 603.18 3051.53 M 517.24 3150.39 C 551.21 3110.83 584.71 3071.98 603.18 3051.53 M 522.23 3150.76 C 546.22 3124.65 564.6 3100.31 608.17 3051.89 M 522.23 3150.76 C 543.96 3123.43 566.04 3098.44 608.17 3051.89 M 527.87 3150.36 C 544.59 3131.91 563.21 3108.86 613.81 3051.49 M 527.87 3150.36 C 553.17 3120.33 577.12 3093.31 613.81 3051.49 M 532.86 3150.72 C 560.74 3116.83 590.05 3082.07 618.8 3051.85 M 532.86 3150.72 C 564.06 3114.66 594.43 3080.28 618.8 3051.85 M 538.5 3150.33 C 563.9 3125.82 586.5 3098.32 623.79 3052.21 M 538.5 3150.33 C 566.18 3120.17 591.45 3090.07 623.79 3052.21 M 543.49 3150.69 C 567.61 3121.55 591.84 3096.63 629.43 3051.82 M 543.49 3150.69 C 564.3 3126.4 585.76 3103.1 629.43 3051.82 M 548.47 3151.05 C 583.69 3113.42 617.27 3075.84 634.42 3052.18 M 548.47 3151.05 C 566.06 3129.95 583.71 3110.83 634.42 3052.18 M 554.12 3150.65 C 577.75 3124.46 598.56 3097.22 640.06 3051.78 M 554.12 3150.65 C 576.04 3125.94 596.54 3103.18 640.06 3051.78 M 559.1 3151.01 C 579.28 3130.62 595.05 3109.7 645.05 3052.14 M 559.1 3151.01 C 583.05 3123.92 604.87 3097.67 645.05 3052.14 M 564.75 3150.62 C 595.37 3116.92 622.06 3082.73 650.69 3051.75 M 564.75 3150.62 C 582.85 3128.7 601.63 3108.28 650.69 3051.75 M 569.73 3150.98 C 601.33 3117.1 632.24 3081.42 655.68 3052.11 M 569.73 3150.98 C 587.54 3129.31 606.07 3108.89 655.68 3052.11 M 575.38 3150.58 C 602.31 3119.55 625.19 3091.21 661.32 3051.72 M 575.38 3150.58 C 604.48 3117.44 634.32 3081.63 661.32 3051.72 M 580.36 3150.94 C 612.02 3116.14 640.91 3082.23 666.31 3052.08 M 580.36 3150.94 C 602.07 3124.61 626.18 3097.75 666.31 3052.08 M 586.01 3150.55 C 619.2 3112.49 651.13 3076.88 671.95 3051.68 M 586.01 3150.55 C 616.88 3115.58 646.21 3078.54 671.95 3051.68 M 590.99 3150.91 C 617.8 3116.86 647.82 3087.02 676.94 3052.04 M 590.99 3150.91 C 617.6 3121.28 642.84 3090.88 676.94 3052.04 M 596.64 3150.51 C 631.13 3112.34 659.72 3076.06 682.58 3051.65 M 596.64 3150.51 C 620.19 3122.78 643.37 3096.67 682.58 3051.65 M 601.62 3150.87 C 628.11 3121.1 657 3086.46 687.57 3052.01 M 601.62 3150.87 C 626.5 3120.77 652.53 3089.89 687.57 3052.01 M 606.61 3151.23 C 632.2 3116.89 660.16 3086.74 692.56 3052.37 M 606.61 3151.23 C 629.64 3123.63 652.62 3096.69 692.56 3052.37 M 612.25 3150.84 C 643.02 3118.13 669.99 3083.8 698.2 3051.97 M 612.25 3150.84 C 637.85 3121.91 663.21 3092.63 698.2 3051.97 M 617.24 3151.2 C 633.24 3132.33 652.94 3109.33 703.19 3052.33 M 617.24 3151.2 C 637.04 3128.01 658.08 3104 703.19 3052.33 M 622.88 3150.8 C 647.67 3120.23 675.65 3092.36 708.83 3051.94 M 622.88 3150.8 C 641.01 3130.39 657.29 3110.61 708.83 3051.94 M 627.87 3151.16 C 650.75 3126.37 672.58 3102.27 713.82 3052.3 M 627.87 3151.16 C 644 3130.28 663.32 3110.54 713.82 3052.3 M 633.51 3150.77 C 665.01 3114.77 692.71 3081.89 719.46 3051.9 M 633.51 3150.77 C 651.24 3130.7 669.07 3109.22 719.46 3051.9 M 638.5 3151.13 C 660.38 3127.59 684.94 3098.48 724.45 3052.26 M 638.5 3151.13 C 663.78 3121.13 688.67 3092.53 724.45 3052.26 M 644.14 3150.74 C 669.8 3122.21 692.78 3094.07 730.09 3051.87 M 644.14 3150.74 C 662.81 3128.27 680.86 3107.3 730.09 3051.87 M 649.13 3151.1 C 669.39 3124.44 691.83 3099.19 735.08 3052.23 M 649.13 3151.1 C 667.85 3131.41 684.75 3111.69 735.08 3052.23 M 654.77 3150.7 C 683.84 3116.59 711.78 3081.75 740.72 3051.83 M 654.77 3150.7 C 682.01 3117 712.95 3083.29 740.72 3051.83 M 659.76 3151.06 C 675.82 3132.58 696.43 3110.94 745.71 3052.19 M 659.76 3151.06 C 686.22 3120.58 713.39 3090.96 745.71 3052.19 M 665.4 3150.67 C 685.44 3128.39 701.89 3105.03 750.69 3052.55 M 665.4 3150.67 C 684.71 3127.96 704.87 3107.27 750.69 3052.55 M 670.39 3151.03 C 701.14 3114.07 733.44 3079.39 755.68 3052.91 M 670.39 3151.03 C 699.69 3117.13 729.87 3081.74 755.68 3052.91 M 675.38 3151.39 C 694.58 3128.86 715.44 3102.42 759.35 3054.78 M 675.38 3151.39 C 703.69 3116.56 734.52 3083.56 759.35 3054.78 M 681.02 3150.99 C 703.28 3126.93 728.34 3100.39 761.06 3058.92 M 681.02 3150.99 C 709.95 3117.21 741.38 3082.67 761.06 3058.92 M 686.01 3151.35 C 704.81 3130.64 721.37 3109.53 763.42 3062.3 M 686.01 3151.35 C 712.02 3122.66 736.63 3093.77 763.42 3062.3 M 691.65 3150.96 C 718.98 3117.61 748.79 3087.92 763.16 3068.69 M 691.65 3150.96 C 717.4 3120.44 744.43 3091.28 763.16 3068.69 M 696.64 3151.32 C 721.11 3121.93 747.22 3093.43 762.9 3075.09 M 696.64 3151.32 C 721.66 3121.86 745.38 3094.6 762.9 3075.09 M 702.28 3150.92 C 720.17 3131.08 734.18 3111.98 762.64 3081.49 M 702.28 3150.92 C 715.27 3136.47 729.63 3120.89 762.64 3081.49 M 707.27 3151.28 C 721.19 3138.3 733.7 3123.2 763.03 3087.13 M 707.27 3151.28 C 720.49 3135.95 734.46 3120.28 763.03 3087.13 M 712.91 3150.89 C 732.26 3129.85 749.24 3111.07 762.77 3093.53 M 712.91 3150.89 C 731.96 3130.3 750.14 3107.56 762.77 3093.53 M 717.9 3151.25 C 727.48 3136.73 741.37 3124.46 762.51 3099.93 M 717.9 3151.25 C 732.46 3134.1 746.5 3118.05 762.51 3099.93 M 723.54 3150.85 C 737.6 3131.13 753.86 3114.93 762.91 3105.57 M 723.54 3150.85 C 737.83 3134.9 752.63 3116.37 762.91 3105.57 M 728.53 3151.21 C 737.75 3139.49 748 3129.1 762.64 3111.97 M 728.53 3151.21 C 740.29 3137.93 750.84 3125.54 762.64 3111.97 M 733.52 3151.57 C 738.23 3144.46 745.93 3137.57 762.38 3118.37 M 733.52 3151.57 C 743.68 3140.52 753.16 3129.21 762.38 3118.37 M 739.16 3151.18 C 747.52 3144.5 752.61 3135.29 762.78 3124.01 M 739.16 3151.18 C 748.7 3141.5 757.17 3129.08 762.78 3124.01 M 744.15 3151.54 C 751.08 3145.39 758.58 3135.53 762.52 3130.41 M 744.15 3151.54 C 748.94 3145.72 752.08 3141.67 762.52 3130.41 M 749.13 3151.9 C 751.15 3148.43 754.58 3146.62 762.25 3136.81 M 749.13 3151.9 C 754.17 3146.53 758.36 3140.69 762.25 3136.81" fill="none" stroke="#ffccff" stroke-width="0.5" stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 348px; height: 1px; padding-top: 3100px; margin-left: 413px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-style: italic; white-space: normal; overflow-wrap: normal;">
                                <font style="">
                                    <br style="border-color: var(--border-color);"/>
                                    kernel-task-accounting.drawio.svg
                                    <br/>
                                </font>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="587" y="3105" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="18px" text-anchor="middle" font-style="italic">
                    ...
                </text>
            </switch>
        </g>
        <a xlink:href="https://github.com/torvalds/linux/blob/3d7cb6b04c3f3115719235cc6866b10326de34cd/include/linux/sched.h#L726">
            <path d="M 522 176 L 522 150 L 852 150 L 852 176" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10" pointer-events="all"/>
            <path d="M 522 176 L 522 330 L 852 330 L 852 176" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <path d="M 522 176 L 852 176" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" font-size="12px">
                <text x="523.5" y="167.5">
                    struct task_struct  -  sched.h
                </text>
            </g>
        </a>
        <rect x="522" y="176" width="330" height="154" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-526-181-322-154-0)" font-size="11px">
            <text x="527.5" y="192.5">
                #ifdef CONFIG_TASK_DELAY_ACCT
            </text>
            <text x="527.5" y="205.5">
                struct task_delay_info      *delays;
            </text>
            <text x="527.5" y="218.5">
                #endif
            </text>
        </g>
        <a xlink:href="https://github.com/torvalds/linux/blob/3d7cb6b04c3f3115719235cc6866b10326de34cd/include/linux/delayacct.h#L13">
            <path d="M 1152 26 L 1152 0 L 1882 0 L 1882 26" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
            <path d="M 1152 26 L 1152 1080 L 1882 1080 L 1882 26" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <path d="M 1152 26 L 1882 26" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
            <g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" font-size="12px">
                <text x="1153.5" y="17.5">
                    struct task_delay_info -  include/linux/delayacct.h
                </text>
            </g>
        </a>
        <rect x="1152" y="26" width="730" height="854" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 720px; height: 1px; padding-top: 33px; margin-left: 1158px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 850px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: nowrap;">
                                <div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-size: 14px; line-height: 19px;">
                                    <div>
                                        <span style="color: #569cd6;">
                                            struct
                                        </span>
                                        task_delay_info {
                                    </div>
                                    <div>
                                        <span style="color: #4ec9b0;">
                                            raw_spinlock_t
                                        </span>
                                        lock;
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #6a9955;">
                                            /* For each stat XXX, add following, aligned appropriately
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            *
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * struct timespec XXX_start, XXX_end;
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * u64 XXX_delay;
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * u32 XXX_count;
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            *
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * Atomicity of updates to XXX_delay, XXX_count protected by
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * single lock above (split into XXX_lock if contention is an issue).
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        <span style="color: #6a9955;">
                                            /*
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * XXX_count is incremented on every XXX operation, the delay
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * associated with the operation is added to XXX_delay.
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            * XXX_delay contains the accumulated delay time in nanoseconds.
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            */
                                        </span>
                                    </div>
                                    <div>
                                        u64 blkio_start;
                                    </div>
                                    <div>
                                        u64 blkio_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for sync block io completion(
                                        </span>
                                        <span style="color: rgb(106, 153, 85);">
                                            in nanoseconds
                                        </span>
                                        <span style="color: rgb(106, 153, 85);">
                                            ) */
                                        </span>
                                    </div>
                                    <div>
                                        u64 swapin_start;
                                    </div>
                                    <div>
                                        u64 swapin_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for swapin */
                                        </span>
                                    </div>
                                    <div>
                                        u32 blkio_count;
                                        <span style="color: #6a9955;">
                                            /* total count of the number of sync block */
                                        </span>
                                    </div>
                                    <div>
                                        <span style="color: #6a9955;">
                                            /* io operations performed */
                                        </span>
                                    </div>
                                    <div>
                                        u32 swapin_count;
                                        <span style="color: #6a9955;">
                                            /* total count of swapin */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 freepages_start;
                                    </div>
                                    <div>
                                        u64 freepages_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for memory reclaim */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 thrashing_start;
                                    </div>
                                    <div>
                                        u64 thrashing_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for thrashing page */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 compact_start;
                                    </div>
                                    <div>
                                        u64 compact_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for memory compact */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u64 wpcopy_start;
                                    </div>
                                    <div>
                                        u64 wpcopy_delay;
                                        <span style="color: #6a9955;">
                                            /* wait for write-protect copy */
                                        </span>
                                    </div>
                                    <br/>
                                    <div>
                                        u32 freepages_count;
                                        <span style="color: #6a9955;">
                                            /* total count of memory reclaim */
                                        </span>
                                    </div>
                                    <div>
                                        u32 thrashing_count;
                                        <span style="color: #6a9955;">
                                            /* total count of thrash waits */
                                        </span>
                                    </div>
                                    <div>
                                        u32 compact_count;
                                        <span style="color: #6a9955;">
                                            /* total count of memory compact */
                                        </span>
                                    </div>
                                    <div>
                                        u32 wpcopy_count;
                                        <span style="color: #6a9955;">
                                            /* total count of write-protect copy */
                                        </span>
                                    </div>
                                    <div>
                                        };
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1158" y="44" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">
                    struct task_delay_info {...
                </text>
            </switch>
        </g>
        <rect x="1152" y="880" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF3333" font-family="Helvetica" clip-path="url(#mx-clip-1156-885-722-40-0)" font-size="11px">
            <text x="1157.5" y="896.5">
                __delayacct_blkio_start(void) : current-&gt;delays-&gt;blkio_start = local_clock();
            </text>
        </g>
        <rect x="1152" y="920" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF3333" font-family="Helvetica" clip-path="url(#mx-clip-1156-925-722-40-0)" font-size="11px">
            <text x="1157.5" y="936.5">
                __delayacct_blkio_end(struct task_struct *p)
            </text>
        </g>
        <rect x="1152" y="960" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF3333" font-family="Helvetica" clip-path="url(#mx-clip-1156-965-722-40-0)" font-size="11px">
            <text x="1157.5" y="976.5">
                static void delayacct_end(raw_spinlock_t *lock, u64 *start, u64 *total, u32 *count)
            </text>
        </g>
        <rect x="1152" y="1000" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-1156-1005-722-40-0)" font-size="11px">
            <text x="1157.5" y="1016.5">
                delayacct_add_tsk(struct taskstats *d, struct task_struct *tsk)
            </text>
        </g>
        <rect x="1152" y="1040" width="730" height="40" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF33FF" font-family="Helvetica" clip-path="url(#mx-clip-1156-1045-722-40-0)" font-size="11px">
            <text x="1157.5" y="1056.5">
                __delayacct_blkio_ticks(struct task_struct *tsk)
            </text>
        </g>
        <path d="M 1152 365.05 L 877.26 298.85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <path d="M 852.96 292.99 L 866.83 288.77 L 877.26 298.85 L 863.39 303.07 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 329px; margin-left: 1002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                <span style="text-align: left; background-color: rgb(251, 251, 251);">
                                    delays
                                </span>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="332" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    delays
                </text>
            </switch>
        </g>
        <a xlink:href="https://github.com/torvalds/linux/blob/3d7cb6b04c3f3115719235cc6866b10326de34cd/include/linux/jiffies.h#L79">
            <rect x="2482" y="750" width="130" height="50" fill="#d5e8d4" stroke="#82b366"/>
            <g transform="translate(-0.5 -0.5)">
                <switch>
                    <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                        <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 775px; margin-left: 2483px;">
                            <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                                <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                    <b>
                                        <u>
                                            jiffie - linux/jiffies.h
                                        </u>
                                    </b>
                                    <br/>
                                    <br/>
                                    global variable
                                </div>
                            </div>
                        </div>
                    </foreignObject>
                    <text x="2547" y="779" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                        jiffie - linux/jiffies...
                    </text>
                </switch>
            </g>
        </a>
        <a xlink:href="http://books.gigatux.nl/mirror/kerneldevelopment/0672327201/ch10lev1sec3.html">
            <path d="M 2602 560 L 2782 560 L 2802 580 L 2802 660 L 2602 660 L 2602 560 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
            <path d="M 2782 560 L 2782 580 L 2802 580" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
            <g transform="translate(-0.5 -0.5)">
                <switch>
                    <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                        <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 610px; margin-left: 2603px;">
                            <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                                <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; text-decoration: underline; white-space: normal; overflow-wrap: normal;">
                                    holds the number of ticks that have occurred since the system booted.
                                    <br/>
                                    <br/>
                                    incremented by one during each
                                    <br/>
                                    timer interrupt
                                </div>
                            </div>
                        </div>
                    </foreignObject>
                    <text x="2702" y="614" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" text-decoration="underline">
                        holds the number of ticks that ha...
                    </text>
                </switch>
            </g>
        </a>
        <path d="M 2570.48 750 L 2655.03 660" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="2832" y="690" width="160" height="70" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 158px; height: 1px; padding-top: 725px; margin-left: 2833px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                <b>
                                    sched HZ
                                </b>
                                <br/>
                                <br/>
                                HZ timer interrupts in a second
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2912" y="729" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    sched HZ...
                </text>
            </switch>
        </g>
        <ellipse cx="2788.26" cy="844.98" rx="14.922623434045686" ry="14.93032514930325" fill="rgb(255, 255, 255)" stroke="none"/>
        <path d="M 2788.26 833.03 L 2788.26 830.04 C 2795.38 830 2801.54 835 2802.97 841.98 C 2804.4 848.96 2800.7 855.98 2794.14 858.74 C 2787.57 861.5 2779.97 859.24 2775.99 853.33 C 2772 847.42 2772.74 839.52 2777.75 834.46" fill="none" stroke="#0080f0" stroke-width="2" stroke-miterlimit="10"/>
        <path d="M 2779.31 836.02 L 2788.56 844.68 C 2788.64 844.85 2788.6 845.05 2788.47 845.19 C 2788.34 845.32 2788.13 845.36 2787.96 845.27 Z" fill="none" stroke="#0080f0" stroke-width="2" stroke-linejoin="round" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 869px; margin-left: 2788px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); background-color: #ffffff; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2788" y="881" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                </text>
            </switch>
        </g>
        <path d="M 2772 841 L 2618.11 795.86" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <path d="M 2613.07 794.38 L 2620.77 792.99 L 2618.11 795.86 L 2618.8 799.71 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 818px; margin-left: 2692px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                <span style="font-size: 12px; background-color: rgb(251, 251, 251);">
                                    interrupts
                                </span>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2692" y="821" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    interrupts
                </text>
            </switch>
        </g>
        <path d="M 2804.35 830 L 2876.12 760" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="2142" y="730" width="130" height="50" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 755px; margin-left: 2143px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                <b>
                                    <span>
                                        local_clock() = sched_clock()
                                        <br/>
                                        - clock.h
                                        <br/>
                                    </span>
                                </b>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2207" y="759" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    local_clock() = sched_...
                </text>
            </switch>
        </g>
        <path d="M 1612.17 880 L 2142 768.66" fill="none" stroke="#ff3333" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="2512" y="900" width="410" height="170" fill="#f5f5f5" stroke="#666666"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 408px; height: 1px; padding-top: 907px; margin-left: 2514px;">
                        <div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">
                                /*
                                <br/>
                                * Scheduler clock - returns current time in nanosec units.
                                <br/>
                                * This is default implementation.
                                <br/>
                                * Architectures and sub-architectures can override this.
                                <br/>
                                */
                                <br/>
                                notrace unsigned long long __weak sched_clock(void)
                                <br/>
                                {
                                <br/>
                                return (unsigned long long)(jiffies - INITIAL_JIFFIES)
                                <br/>
                                * (NSEC_PER_SEC / HZ);
                                <br/>
                                }
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2514" y="919" fill="#333333" font-family="Helvetica" font-size="12px">
                    /*...
                </text>
            </switch>
        </g>
        <path d="M 2262.43 780 L 2528.52 900" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="2002" y="1130" width="480" height="240" fill="#f5f5f5" stroke="none"/>
        <g fill="#FF3333" font-family="Helvetica" font-size="12px">
            <text x="2003.5" y="1147.5">
                /*
            </text>
            <text x="2003.5" y="1161.5">
                * Finish delay accounting for a statistic using its timestamps (@start),
            </text>
            <text x="2003.5" y="1175.5">
                * accumalator (@total) and @count
            </text>
            <text x="2003.5" y="1189.5">
                */
            </text>
            <text x="2003.5" y="1203.5">
                static void delayacct_end(raw_spinlock_t *lock, u64 *start, u64 *total, u32 *count)
            </text>
            <text x="2003.5" y="1217.5">
                {
            </text>
            <text x="2003.5" y="1231.5">
                s64 ns = local_clock() - *start;
            </text>
            <text x="2003.5" y="1245.5">
                unsigned long flags;
            </text>
            <text x="2003.5" y="1273.5">
                if (ns &gt; 0) {
            </text>
            <text x="2003.5" y="1287.5">
                raw_spin_lock_irqsave(lock, flags);
            </text>
            <text x="2003.5" y="1301.5">
                *total += ns;
            </text>
            <text x="2003.5" y="1315.5">
                (*count)++;
            </text>
            <text x="2003.5" y="1329.5">
                raw_spin_unlock_irqrestore(lock, flags);
            </text>
            <text x="2003.5" y="1343.5">
                }
            </text>
            <text x="2003.5" y="1357.5">
                }
            </text>
        </g>
        <path d="M 1882 980 L 2082 1130" fill="none" stroke="#ff3333" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <rect x="2002" y="870" width="430" height="180" fill="#f5f5f5" stroke="none"/>
        <g fill="#FF3333" font-family="Helvetica" font-size="12px">
            <text x="2003.5" y="887.5">
                /*
            </text>
            <text x="2003.5" y="901.5">
                * We cannot rely on the `current` macro, as we haven't yet switched back to
            </text>
            <text x="2003.5" y="915.5">
                * the process being woken.
            </text>
            <text x="2003.5" y="929.5">
                */
            </text>
            <text x="2003.5" y="943.5">
                void __delayacct_blkio_end(struct task_struct *p)
            </text>
            <text x="2003.5" y="957.5">
                {
            </text>
            <text x="2003.5" y="971.5">
                delayacct_end(&amp;p-&gt;delays-&gt;lock,
            </text>
            <text x="2003.5" y="985.5">
                &amp;p-&gt;delays-&gt;blkio_start,
            </text>
            <text x="2003.5" y="999.5">
                &amp;p-&gt;delays-&gt;blkio_delay,
            </text>
            <text x="2003.5" y="1013.5">
                &amp;p-&gt;delays-&gt;blkio_count);
            </text>
            <text x="2003.5" y="1027.5">
                }
            </text>
        </g>
        <path d="M 1882 940 L 2002 947.16" fill="none" stroke="#ff3333" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <path d="M 552 786 L 552 760 L 962 760 L 962 786" fill="#d5e8d4" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 552 786 L 552 870 L 962 870 L 962 786" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 552 786 L 962 786" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="553.5" y="777.5">
                static __schedule(unsigned int sched_mode)  -  kernel/sched/core.c
            </text>
        </g>
        <rect x="552" y="786" width="410" height="84" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-556-791-402-84-0)" font-size="11px">
            <text x="557.5" y="802.5">
                if (prev-&gt;in_iowait) {
            </text>
            <text x="557.5" y="815.5">
                atomic_inc(&amp;rq-&gt;nr_iowait);
            </text>
            <text x="557.5" y="828.5">
                delayacct_blkio_start();
            </text>
            <text x="557.5" y="841.5">
                }
            </text>
        </g>
        <path d="M 962 865.37 L 1145.74 898.86" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 1150.9 899.8 L 1143.39 901.99 L 1145.74 898.86 L 1144.64 895.1 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 412 941 L 412 915 L 962 915 L 962 941" fill="#d5e8d4" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 412 941 L 412 1025 L 962 1025 L 962 941" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 412 941 L 962 941" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="413.5" y="932.5">
                try_to_wake_up(struct task_struct *p, unsigned int state, int wake_flags)  -  kernel/sched/core.c
            </text>
        </g>
        <rect x="412" y="941" width="550" height="84" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-416-946-542-84-0)" font-size="11px">
            <text x="417.5" y="957.5">
                if (prev-&gt;in_iowait) {
            </text>
            <text x="417.5" y="970.5">
                atomic_inc(&amp;rq-&gt;nr_iowait);
            </text>
            <text x="417.5" y="983.5">
                delayacct_blkio_start();
            </text>
            <text x="417.5" y="996.5">
                }
            </text>
        </g>
        <path d="M 962 957.57 L 1145.66 940.59" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 1150.89 940.1 L 1144.24 944.23 L 1145.66 940.59 L 1143.59 937.26 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 422 1096 L 422 1070 L 972 1070 L 972 1096" fill="#d5e8d4" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 422 1096 L 422 1180 L 972 1180 L 972 1096" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 422 1096 L 972 1096" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="423.5" y="1080.5">
                ttwu_do_activate(struct rq *rq, struct task_struct *p, int wake_flags,
            </text>
            <text x="423.5" y="1094.5">
                struct rq_flags *rf)
            </text>
        </g>
        <rect x="422" y="1096" width="550" height="84" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-426-1101-542-84-0)" font-size="11px">
            <text x="427.5" y="1112.5">
                if (prev-&gt;in_iowait) {
            </text>
            <text x="427.5" y="1125.5">
                atomic_inc(&amp;rq-&gt;nr_iowait);
            </text>
            <text x="427.5" y="1138.5">
                delayacct_blkio_start();
            </text>
            <text x="427.5" y="1151.5">
                }
            </text>
        </g>
        <path d="M 832.27 1070 L 1146.1 942.4" fill="none" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 1150.96 940.42 L 1145.8 946.3 L 1146.1 942.4 L 1143.16 939.82 Z" fill="#ff3333" stroke="#ff3333" stroke-miterlimit="10"/>
        <path d="M 1282 1816 L 1282 1790 L 2012 1790 L 2012 1816" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 1282 1816 L 1282 3040 L 2012 3040 L 2012 1816" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 1282 1816 L 2012 1816" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="1283.5" y="1807.5">
                struct taskstats -  /usr/include/linux/taskstats.h
            </text>
        </g>
        <rect x="1282" y="1816" width="730" height="754" fill="#d5e8d4" stroke="#82b366"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 720px; height: 1px; padding-top: 1823px; margin-left: 1288px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 750px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: nowrap;">
                                <div style="background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-size: 14px; line-height: 19px;">
                                    <div style="line-height: 19px;">
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #569cd6;">
                                                struct
                                            </span>
                                            <span style="color: #4ec9b0;">
                                                taskstats
                                            </span>
                                            {
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* The version number of this struct. This field is always set to
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * TAKSTATS_VERSION, which is defined in &lt;linux/taskstats.h&gt;.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Each time the struct is changed, the value should be incremented.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u16
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                version
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_exitcode
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Exit status */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="">
                                            <font color="#6a9955">
                                                ...
                                            </font>
                                        </div>
                                        <div style="">
                                            <font color="#6a9955">
                                                <br/>
                                            </font>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay accounting fields start
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                *
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * All values, until comment "Delay accounting fields end" are
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * available only if delay accounting is enabled, even though the last
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * few fields are not delays
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                *
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_count is the number of delay values recorded
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_delay_total is the corresponding cumulative delay in nanoseconds
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                *
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_delay_total wraps around to zero on overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * xxx_count incremented regardless of overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for cpu, while runnable
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * count, delay_total NOT updated atomically
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_count
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Following four fields atomically updated using task-&gt;delays-&gt;lock */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for synchronous block I/O to complete
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * does not account for delays in I/O submission
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                blkio_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                blkio_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for page fault I/O (swap in only) */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                swapin_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                swapin_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* cpu "wall-clock" running time
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * On some architectures, value will adjust for cpu time stolen
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * from the kernel in involuntary waits due to virtualization.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Value is cumulative, in nanoseconds, without a corresponding count
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * and wraps around to zero silently on overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_run_real_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* cpu "virtual" running time
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Uses time intervals seen by the kernel i.e. no adjustment
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * for kernel's involuntary waits due to virtualization.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Value is cumulative, in nanoseconds, without a corresponding count
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * and wraps around to zero silently on overflow
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_run_virtual_total
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay accounting fields end */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* version 1 ends here */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Basic Accounting Fields start */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #569cd6;">
                                                char
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_comm
                                            </span>
                                            [
                                            <span style="color: #569cd6;">
                                                TS_COMM_LEN
                                            </span>
                                            ];
                                            <span style="color: #6a9955;">
                                                /* Command name */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u8
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_sched
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Scheduling discipline */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u8
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_pad
                                            </span>
                                            [
                                            <span style="color: #b5cea8;">
                                                3
                                            </span>
                                            ];
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_uid
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* User ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_gid
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Group ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_pid
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Process ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_ppid
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Parent process ID */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* __u32 range means times from 1970 to 2106 */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u32
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_btime
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Begin time [sec since 1970] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_etime
                                            </span>
                                            <span style="color: #dcdcaa;">
                                                __attribute__
                                            </span>
                                            ((
                                            <span style="color: #dcdcaa;">
                                                aligned
                                            </span>
                                            (
                                            <span style="color: #b5cea8;">
                                                8
                                            </span>
                                            )));
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Elapsed time [usec] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_utime
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* User CPU time [usec] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_stime
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* SYstem CPU time [usec] */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_minflt
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Minor Page Fault Count */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_majflt
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* Major Page Fault Count */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Basic Accounting Fields end */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Extended accounting fields start */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Accumulated RSS usage in duration of a task, in MBytes-usecs.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * The current rss usage is added to this counter every time
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * a tick is charged to a task's system time. So, at the end we
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * will have memory usage multiplied by system time. Thus an
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * average usage per system time unit can be calculated.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                coremem
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* accumulated RSS usage in MB-usec */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Accumulated virtual memory usage in duration of a task.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * Same as acct_rss_mem1 above except that we keep track of VM usage.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                virtmem
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* accumulated VM  usage in MB-usec */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* High watermark of RSS and virtual memory usage in duration of
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                * a task, in KBytes.
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                hiwater_rss
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* High-watermark of RSS usage, in KB */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                hiwater_vm
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* High-water VM usage, in KB */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* The following four fields are I/O statistics of a task. */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                read_char
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes read */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                write_char
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes written */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                read_syscalls
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* read syscalls */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                write_syscalls
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* write syscalls */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Extended accounting fields end */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #c586c0;">
                                                #define
                                            </span>
                                            <span style="color: #569cd6;">
                                            </span>
                                            <span style="color: #569cd6;">
                                                TASKSTATS_HAS_IO_ACCOUNTING
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Per-task storage I/O accounting starts */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                read_bytes
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes of read I/O */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                write_bytes
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes of write I/O */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cancelled_write_bytes
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* bytes of cancelled write I/O */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                nvcsw
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* voluntary_ctxt_switches */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                nivcsw
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* nonvoluntary_ctxt_switches */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* time accounting for SMT machines */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_utimescaled
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* utime scaled on frequency etc */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_stimescaled
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* stime scaled on frequency etc */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                cpu_scaled_run_real_total
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* scaled cpu_run_real_total */
                                            </span>
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for memory reclaim */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                freepages_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                freepages_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* Delay waiting for thrashing page */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                thrashing_count
                                            </span>
                                            ;
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                thrashing_delay_total
                                            </span>
                                            ;
                                        </div>
                                        <br/>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #6a9955;">
                                                /* v10: 64-bit btime to avoid overflow */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            <span style="color: #4ec9b0;">
                                                __u64
                                            </span>
                                            <span style="color: #9cdcfe;">
                                                ac_btime64
                                            </span>
                                            ;
                                            <span style="color: #6a9955;">
                                                /* 64-bit begin time */
                                            </span>
                                        </div>
                                        <div style="color: rgb(204, 204, 204);">
                                            };
                                        </div>
                                        <br/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1288" y="1834" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">
                    struct taskstats {...
                </text>
            </switch>
        </g>
        <rect x="1282" y="2570" width="730" height="70" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-1286-2575-722-70-0)" font-size="12px">
            <text x="1287.5" y="2587.5">
                taskstats_user_cmd(struct sk_buff *skb, struct genl_info *info)
            </text>
            <text x="1287.5" y="2601.5">
                cmd_attr_pid(struct genl_info *info)
            </text>
            <text x="1287.5" y="2615.5">
                fill_stats_for_pid(pid_t pid, struct taskstats *stats)
            </text>
            <text x="1287.5" y="2629.5">
                fill_stats(struct user_namespace *user_ns, struct pid_namespace *pid_ns, struct task_struct *tsk, struct taskstats *stats)
            </text>
        </g>
        <rect x="1282" y="2640" width="730" height="260" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-1286-2645-722-260-0)" font-size="12px">
            <text x="1287.5" y="2657.5">
                static const struct genl_ops taskstats_ops[] = {
            </text>
            <text x="1287.5" y="2671.5">
                {
            </text>
            <text x="1287.5" y="2685.5">
                .cmd        = TASKSTATS_CMD_GET,
            </text>
            <text x="1287.5" y="2699.5">
                .validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
            </text>
            <text x="1287.5" y="2713.5">
                .doit       = taskstats_user_cmd,
            </text>
            <text x="1287.5" y="2727.5">
                .policy     = taskstats_cmd_get_policy,
            </text>
            <text x="1287.5" y="2741.5">
                .maxattr    = ARRAY_SIZE(taskstats_cmd_get_policy) - 1,
            </text>
            <text x="1287.5" y="2755.5">
                .flags      = GENL_ADMIN_PERM,
            </text>
            <text x="1287.5" y="2769.5">
                },
            </text>
            <text x="1287.5" y="2783.5">
                {
            </text>
            <text x="1287.5" y="2797.5">
                .cmd        = CGROUPSTATS_CMD_GET,
            </text>
            <text x="1287.5" y="2811.5">
                .validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
            </text>
            <text x="1287.5" y="2825.5">
                .doit       = cgroupstats_user_cmd,
            </text>
            <text x="1287.5" y="2839.5">
                .policy     = cgroupstats_cmd_get_policy,
            </text>
            <text x="1287.5" y="2853.5">
                .maxattr    = ARRAY_SIZE(cgroupstats_cmd_get_policy) - 1,
            </text>
            <text x="1287.5" y="2867.5">
                },
            </text>
            <text x="1287.5" y="2881.5">
                };
            </text>
        </g>
        <rect x="1282" y="2900" width="730" height="140" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#3333FF" font-family="Helvetica" clip-path="url(#mx-clip-1286-2905-722-140-0)" font-size="12px">
            <text x="1287.5" y="2917.5">
                static struct genl_family family __ro_after_init = {
            </text>
            <text x="1287.5" y="2931.5">
                .name       = TASKSTATS_GENL_NAME,
            </text>
            <text x="1287.5" y="2945.5">
                .version    = TASKSTATS_GENL_VERSION,
            </text>
            <text x="1287.5" y="2959.5">
                .module     = THIS_MODULE,
            </text>
            <text x="1287.5" y="2973.5">
                .ops        = taskstats_ops,
            </text>
            <text x="1287.5" y="2987.5">
                .n_ops      = ARRAY_SIZE(taskstats_ops),
            </text>
            <text x="1287.5" y="3001.5">
                .netnsok    = true,
            </text>
            <text x="1287.5" y="3015.5">
                };
            </text>
        </g>
        <path d="M 1518.86 1040 L 1588.17 1783.66" fill="none" stroke="#3333ff" stroke-miterlimit="10"/>
        <path d="M 1588.65 1788.89 L 1584.52 1782.24 L 1588.17 1783.66 L 1591.49 1781.59 Z" fill="#3333ff" stroke="#3333ff" stroke-miterlimit="10"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1416px; margin-left: 1554px;">
                        <div data-drawio-colors="color: #3333FF; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(51, 51, 255); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                update
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1554" y="1419" fill="#3333FF" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    update
                </text>
            </switch>
        </g>
        <path d="M 1282 2605 L 1232 2605 Q 1222 2605 1222 2595 L 1222 1046.37" fill="none" stroke="#3333ff" stroke-miterlimit="10"/>
        <path d="M 1222 1041.12 L 1225.5 1048.12 L 1222 1046.37 L 1218.5 1048.12 Z" fill="#3333ff" stroke="#3333ff" stroke-miterlimit="10"/>
        <rect x="1892" y="1400" width="360" height="150" fill="#f5f5f5" stroke="none"/>
        <g fill="#FF33FF" font-family="Helvetica" font-size="12px">
            <text x="1893.5" y="1417.5">
                __u64 __delayacct_blkio_ticks(struct task_struct *tsk)
            </text>
            <text x="1893.5" y="1431.5">
                {
            </text>
            <text x="1893.5" y="1445.5">
                __u64 ret;
            </text>
            <text x="1893.5" y="1459.5">
                unsigned long flags;
            </text>
            <text x="1893.5" y="1473.5">
                raw_spin_lock_irqsave(&amp;tsk-&gt;delays-&gt;lock, flags);
            </text>
            <text x="1893.5" y="1487.5">
                ret = nsec_to_clock_t(tsk-&gt;delays-&gt;blkio_delay);
            </text>
            <text x="1893.5" y="1501.5">
                raw_spin_unlock_irqrestore(&amp;tsk-&gt;delays-&gt;lock, flags);
            </text>
            <text x="1893.5" y="1515.5">
                return ret;
            </text>
            <text x="1893.5" y="1529.5">
                }
            </text>
        </g>
        <path d="M 1543.75 1080 L 1971.7 1400" fill="none" stroke="#ff33ff" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6"/>
        <path d="M 242 1746 L 242 1720 L 972 1720 L 972 1746" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 242 1746 L 242 1860 L 972 1860 L 972 1746" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <path d="M 242 1746 L 972 1746" fill="none" stroke="#82b366" stroke-miterlimit="10"/>
        <g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
            <text x="243.5" y="1737.5">
                fs/proc/array.c
            </text>
        </g>
        <rect x="242" y="1746" width="730" height="114" fill="#d5e8d4" stroke="#82b366"/>
        <g fill="#FF33FF" font-family="Helvetica" clip-path="url(#mx-clip-246-1751-722-114-0)" font-size="12px">
            <text x="247.5" y="1763.5">
                static int do_task_stat(struct seq_file *m, struct pid_namespace *ns,
            </text>
            <text x="247.5" y="1777.5">
                struct pid *pid, struct task_struct *task, int whole)
            </text>
            <text x="247.5" y="1791.5">
                {
            </text>
            <text x="247.5" y="1805.5">
                ...
            </text>
            <text x="247.5" y="1819.5">
                seq_put_decimal_ull(m, " ", delayacct_blkio_ticks(task));
            </text>
        </g>
        <path d="M 648.81 1746 L 1148.23 1065.13" fill="none" stroke="#ff33ff" stroke-miterlimit="10"/>
        <path d="M 1151.34 1060.9 L 1150.02 1068.62 L 1148.23 1065.13 L 1144.38 1064.48 Z" fill="#ff33ff" stroke="#ff33ff" stroke-miterlimit="10"/>
        <a xlink:href="https://man7.org/linux/man-pages/man5/proc.5.html">
            <rect x="0.25" y="2070" width="451.75" height="200" fill="#f5f5f5" stroke="#ff33ff"/>
            <g fill="#333333" font-family="Helvetica" font-size="12px">
                <text x="1.75" y="2087.5">
                    &gt; https://man7.org/linux/man-pages/man5/proc.5.html
                </text>
                <text x="1.75" y="2101.5">
                    &gt;
                </text>
                <text x="1.75" y="2115.5">
                    &gt; ```
                </text>
                <text x="1.75" y="2129.5">
                    &gt;        /proc/pid/stat
                </text>
                <text x="1.75" y="2143.5">
                    &gt;               Status information about the process.  This is used by
                </text>
                <text x="1.75" y="2157.5">
                    &gt;               ps(1).  It is defined in the kernel source file
                </text>
                <text x="1.75" y="2171.5">
                    &gt;               fs/proc/array.c.
                </text>
                <text x="1.75" y="2185.5">
                    &gt;       ...
                </text>
                <text x="1.75" y="2199.5">
                    &gt;               (42) delayacct_blkio_ticks  %llu  (since Linux 2.6.18)
                </text>
                <text x="1.75" y="2213.5">
                    &gt;                      Aggregated block I/O delays, measured in clock
                </text>
                <text x="1.75" y="2227.5">
                    &gt;                      ticks (centiseconds).
                </text>
                <text x="1.75" y="2241.5">
                    &gt; ```
                </text>
            </g>
        </a>
        <path d="M 543.26 1864.42 L 329.91 2070" fill="none" stroke="#ff33ff" stroke-miterlimit="10"/>
        <path d="M 547.04 1860.78 L 544.43 1868.15 L 543.26 1864.42 L 539.57 1863.11 Z" fill="#ff33ff" stroke="#ff33ff" stroke-miterlimit="10"/>
    </g>
    <switch>
        <g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/>
        <a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank">
            <text text-anchor="middle" font-size="10px" x="50%" y="100%">
                Text is not SVG - cannot display
            </text>
        </a>
    </switch>
</svg>